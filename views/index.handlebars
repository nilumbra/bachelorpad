<!DOCTYPE html>
<html>
<head>
    <!--<script src="howler.min.js"></script>-->
    <script src="javascripts/howler.min.js" type="text/javascript"></script>
    <script src="http://code.jquery.com/jquery-1.11.3.min.js"></script>
    <script src="http://code.jquery.com/jquery-migrate-1.2.1.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?libraries=places"></script>

    <script>
        var nightSound = new Howl({
            urls: ['sounds/nightlife.ogg', 'sounds/nightlife.m4a'/*, 'sounds/nightlife.mp3'*/],
            autoplay: false,
            loop: true,
            volume: 0.2
        });
        var daySound = new Howl({
            urls: ['sounds/daytime.ogg', 'sounds/daytime.m4a'/*, 'sounds/daytime.mp3'*/],
            autoplay: false,
            loop: true,
            volume: 0.2
        });
        var ucsd = new google.maps.LatLng(32.880694,-117.236331);
        // $.getJSON("https://maps.googleapis.com/maps/api/place/textsearch/json?query=%22bars%22&location=32.880694,%20-117.236331&radius=1200&sensor=true&key=AIzaSyC5DPsSONONKsTXuyovXMCeGVIvVEX6038&types=bar", function(data) {
        // 	console.log(data);
        // });

        var map;

        var rangeShowing = false;
        var citymap = {};
        var largeCircle;
        var medCircle;
        var smallCircle;

        var largeCircleRadius = (1609.34)*1; //meters
        var medCircleRadius = (1609.34)*.5;
        var smallCircleRadius = (1609.34)*.25;



        function initialize()
        {
            var styles = [
                {
                    stylers: [
                        { hue: "#194C62" },
                        { saturation: -40 },
                        { invert_lightness: true}
                    ]
                }
            ];
            var styledMap = new google.maps.StyledMapType(styles, {name: "Nightlife"});
            var mapProp = {
                center:ucsd,
                zoom:15,
                mapTypeControlOptions: {
                    mapTypeIds: [google.maps.MapTypeId.ROADMAP, 'map_style']
                }
            };

            map = new google.maps.Map(document.getElementById("googleMap"),mapProp);
            map.mapTypes.set('map_style', styledMap);
            map.setMapTypeId('map_style');

            google.maps.event.addListener(map, 'maptypeid_changed', function()
            {
                var sMapType = map.getMapTypeId();
                if(sMapType == "roadmap") {
                    nightSound.fadeOut(0, 1500, function() {
                        nightSound.stop();
                    });
                    //daySound.play();

                    var dayRequest = {
                        location: map.getCenter(),
                        radius: 500,
                        types: ['grocery_or_supermarket']
                    };
                    service.nearbySearch(dayRequest, function (results, status) {
                        daySound.fadeIn(0.05 * results.length, 1500);
                        if (status == google.maps.places.PlacesServiceStatus.OK) {
                            for(var i = 0; i < markers.length; i++) {
                                markers[i].setMap(null);
                            }
                            markers = [];
                            for (var i = 0; i < results.length; i++) {
                                var mark = results[i];
                                var place = new google.maps.LatLng(mark.geometry.location.A,mark.geometry.location.F);
                                var marked = new google.maps.Marker({
                                    position: place/*,
									icon: barIcon*/
                                });
                                marked.setMap(map);
                                markers.push(marked);
                            }
                        }
                    });
                }
                else {
                    daySound.fadeOut(0, 1500);
                    //nightSound.play();

                    var nightRequest = {
                        location: map.getCenter(),
                        radius: 500,
                        types: ['bar', 'night_club']
                    };
                    service.nearbySearch(nightRequest, function (results, status) {
                        nightSound.fadeIn(0.05 * results.length, 1500);
                        if (status == google.maps.places.PlacesServiceStatus.OK) {

                            for(var i = 0; i < markers.length; i++) {
                                markers[i].setMap(null);
                            }
                            markers = [];
                            for (var i = 0; i < results.length; i++) {
                                var mark = results[i];
                                var place = new google.maps.LatLng(mark.geometry.location.A,mark.geometry.location.F);
                                var marked = new google.maps.Marker({
                                    position: place,
                                    icon: barIcon
                                });
                                marked.setMap(map);
                                markers.push(marked);
                            }
                        }
                    });
                }
                // 	map.setMapTypeId('minimal');
            });
            var service = new google.maps.places.PlacesService(map);
            var markers = [];
            var barIcon = {
                url: 'images/wine.png',
                size: new google.maps.Size(33, 33),
                origin: new google.maps.Point(0,0),
                anchor: new google.maps.Point(16, 16)
            };

            google.maps.event.addListener(map, 'dragend', function() {
                var sMapType = map.getMapTypeId();

                for(var i = 0; i < markers.length; i++) {
                    markers[i].setMap(null);
                }
                if(sMapType == "roadmap") { //daytime

                    var dayRequest = {
                        location: map.getCenter(),
                        radius: 500,
                        types: ['grocery_or_supermarket']
                    };
                    var nearestMall = {
                        location: map.getCenter(),
                        radius: 500,
                        types: ['shopping_mall']
                    };
                    var nearestGym = {
                        location: map.getCenter(),
                        radius: 500,
                        types: ['gym']
                    };

                    service.nearbySearch(dayRequest, function (results, status) {
                        daySound.volume(0.05 * results.length);
                        if (status == google.maps.places.PlacesServiceStatus.OK) {
                            markers = [];
                            for (var i = 0; i < results.length; i++) {
                                var mark = results[i];
                                var place = new google.maps.LatLng(mark.geometry.location.A,mark.geometry.location.F);
                                var marked = new google.maps.Marker({
                                    position: place/*,
									icon: barIcon*/
                                });
                                marked.setMap(map);
                                markers.push(marked);
                            }
                        }
                    });
                }
                else { //nighttime

                    var nightRequest = {
                        location: map.getCenter(),
                        radius: 500,
                        types: ['bar', 'night_club']
                    };
                    var alcRequest = {
                        location: map.getCenter(),
                        radius: 500,
                        types: ['liquor_store']
                    };
                    service.nearbySearch(nightRequest, function (results, status) {
                        nightSound.volume(0.05 * results.length);
                        if (status == google.maps.places.PlacesServiceStatus.OK) {
                            markers = [];
                            for (var i = 0; i < results.length; i++) {
                                var mark = results[i];
                                var place = new google.maps.LatLng(mark.geometry.location.A,mark.geometry.location.F);
                                var marked = new google.maps.Marker({
                                    position: place,
                                    icon: barIcon
                                });
                                marked.setMap(map);
                                markers.push(marked);
                            }
                        }
                    });
                }


            } );

            var marker=new google.maps.Marker({
                position:ucsd
            });




            //Add custom controls to map
            var centerControlDiv = document.createElement('div');
            var centerControl = new CenterControl(centerControlDiv, map, "Controls");
            centerControlDiv.index = 1;
            map.controls[google.maps.ControlPosition.RIGHT_CENTER].push(centerControlDiv);


            marker.setMap(map);
        }

        function createMarker(mark) {
            var place = new google.maps.LatLng(mark.geometry.location.A,mark.geometry.location.F);
            var marked = new google.maps.Marker({
                position: place
            });
            marked.setMap(map);
        }

        google.maps.event.addDomListener(window, 'load', initialize);









        function CenterControl(controlDiv, map, name) {

            // Set CSS for the control border
            var controlUI = document.createElement('div');
            controlUI.style.backgroundColor = '#fff';
            controlUI.style.border = '2px solid #fff';
            controlUI.style.borderRadius = '3px';
            controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';
            controlUI.style.cursor = 'pointer';
            controlUI.style.marginRight = '22px';
            controlUI.style.textAlign = 'center';
            controlUI.title = 'Choose an option';
            controlDiv.appendChild(controlUI);

            // Set CSS for the control interior
            var showRangeText = document.createElement('div');
            showRangeText.style.color = 'rgb(25,25,25)';
            showRangeText.style.fontFamily = 'Roboto,Arial,sans-serif';
            showRangeText.style.fontSize = '16px';
            showRangeText.style.lineHeight = '38px';
            showRangeText.style.paddingLeft = '15px';
            showRangeText.style.paddingRight = '15px';
            showRangeText.innerHTML = 'Show Range';
            controlUI.appendChild(showRangeText);




            google.maps.event.addDomListener(showRangeText, 'click', function() {

                console.log("RangeShowing: "+rangeShowing);
                if(!rangeShowing)
                    showRangeCircles();
                else if(rangeShowing)
                    hideRangeCircles();

            });

        }



        function hideRangeCircles(){
            rangeShowing = false;

            largeCircle.setMap(null);
            medCircle.setMap(null);
            smallCircle.setMap(null);
        }

        function showRangeCircles(){


            rangeShowing = true;

            //var circle = new google.maps.Circle({radius: 10, center: map.getCenter()});
            //map.fitBounds(circle.getBounds());

            var city = citymap.sandiego1;

            var largeOptions = {
                strokeColor: '#03A9F4',
                strokeOpacity: 0.18,
                strokeWeight: 2,
                fillColor: '#03A9F4',
                fillOpacity: 0.2,
                map: map,
                center: map.getCenter() //city.center
                //radius: (1609.34)*1 //in meters
            };

            var medOptions = {
                strokeColor: '#03A9F4',
                strokeOpacity: 0.18,
                strokeWeight: 2,
                fillColor: '#03A9F4',
                fillOpacity: 0.1,
                map: map,
                center: map.getCenter() //city.center,
                //radius: (1609.34)*.5 //in meters
            };

            var smallOptions = {
                strokeColor: '#03A9F4',
                strokeOpacity: 0.18,
                strokeWeight: 2,
                fillColor: '#03A9F4',
                fillOpacity: 0.09,
                map: map,
                center: map.getCenter() //city.center,
                //radius: (1609.34)*.25 //.5 mile
            };




            // Add the circle for this city to the map.
            largeCircle = new google.maps.Circle(largeOptions);
            medCircle = new google.maps.Circle(medOptions);
            smallCircle = new google.maps.Circle(smallOptions);


            startAnimateCircles();


        }



        var smallRadius = 1;
        var mediumRadius = 1;
        var largeRadius = 1;
        var smallTime = 0;
        var mediumTime = 0;
        var largeTime = 0;

        var largeCircleInterval;
        var mediumCircleInterval;
        var smallCircleInterval;

        function smallCircleAnimation() {

            if ((smallRadius < smallCircleRadius)) {
                smallRadius =  -(1-(Math.pow((1-smallTime), 2)));
                smallCircle.setRadius(smallRadius);
            }
            else{
                clearInterval(smallCircleAnimation);
            }
            smallTime = smallTime += 5;
        }

        function medCircleAnimation() {

            if ((mediumRadius < medCircleRadius)) {
                mediumRadius =  -(1-(Math.pow((1-mediumTime), 2)));
                medCircle.setRadius(mediumRadius);
            }
            else{
                clearInterval(medCircleAnimation);
            }
            mediumTime = mediumTime += 3;
        }

        function largeCircleAnimation() {
            if ((largeRadius < largeCircleRadius)) {
                largeRadius =  -(1-(Math.pow((1-largeTime), 2)));
                largeCircle.setRadius(largeRadius);
            }
            else{
                clearInterval(largeCircleInterval);
            }

            largeTime = largeTime += 1;

        }


        function startAnimateCircles(){
            smallRadius = 1;
            mediumRadius = 1;
            largeRadius = 1;
            smallTime = 0;
            mediumTime = 0;
            largeTime = 0;



            largeCircleInterval = setInterval(largeCircleAnimation, 5);

            mediumCircleInterval = setInterval(medCircleAnimation, 3);

            smallCircleInterval = setInterval(smallCircleAnimation, 1);







            /*

*/
            /*
            var radius = 1;
            var time = 0;
            setTimeout(function(){
                clearInterval(medCircleAnimation);
                setInterval(largeCircleAnimation, 1);
            }, 1000);

            setTimeout(function(){
                clearInterval(largeCircleAnimation);
            }, 1000);
*/





        }


    </script>
    <style type="text/css">
        html, body {
            margin: 0;
            height: 100%;
            width: 100%;
        }
    </style>
</head>

<body>
<div id="googleMap" style="width:100%;height:100%;"></div>
<div>Icons made by <a href="http://www.flaticon.com/authors/freepik" title="Freepik">Freepik</a> from <a href="http://www.flaticon.com" title="Flaticon">www.flaticon.com</a>             is licensed by <a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0">CC BY 3.0</a></div>
</body>
</html>